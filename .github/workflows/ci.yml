name: CI

on:
  push:
    branches: '*'
    tags: v*
  pull_request:
    branches:
      - master
  schedule:
    - cron: 0 0 * * *

env:
  MACOSX_DEPLOYMENT_TARGET: 10.9

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os.host }}
    continue-on-error: ${{ matrix.nightly == 'nightly' }}
    env:
      LIME_ARCH: ${{ matrix.arch }}
      LIME_COMPILER: ${{ matrix.compiler }}
    strategy:
      matrix:
        compiler: [ldc-latest]
        arch: [x86_64]
        os:
          # - target: macos
          #   host: macOS-latest
          - target: linux
            host: ubuntu-latest
          # - target: windows
          #   host: windows-latest
          # - target: freebsd
          #   host: macOS-latest
          #   version: 12.2
          #   cross_platform_actions: true
          # - target: openbsd
          #   host: macOS-latest
          #   version: 6.8
          #   cross_platform_actions: true
          #   cross_compile: true

        # include:
        #   - os:
        #       target: windows
        #       host: windows-latest
        #     compiler: ldc-latest
        #     arch: x86
        #
        #   - os:
        #       target: linux
        #       host: ubuntu-latest
        #     compiler: ldc-beta
        #     arch: x86_64
        #
        #   - os:
        #       target: linux
        #       host: ubuntu-latest
        #     compiler: ldc-master
        #     arch: x86_64
        #     nightly: nightly

    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Test
        if: ${{ !matrix.os.cross_platform_actions }}
        run: ./.github/workflows/ci.sh

      - name: Test ${{ matrix.os.target }}
        if: ${{ matrix.os.cross_platform_actions }}
        uses: cross-platform-actions/action@v0.0.1
        with:
          shell: bash
          operating_system: ${{ matrix.os.target }}
          version: ${{ matrix.os.version }}
          environment_variables: LIME_ARCH LIME_COMPILER
          run: |
            sudo pkg update
            sudo pkg install -y bash curl gnupg git llvm-90
            ./.github/workflows/ci.sh

  # create_release:
  #   name: Create Release
  #   needs: test
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ${{ matrix.os == 'freebsd' && 'macOS-latest' || matrix.os }}
  #   env:
  #     DLP_ARCH: ${{ matrix.arch }}
  #     DLP_COMPILER: ldc-latest
  #   strategy:
  #     matrix:
  #       arch: [x86_64]
  #       os:
  #         - macOS-latest
  #         - ubuntu-latest
  #         - windows-latest
  #         - freebsd
  #
  #       include:
  #         - os: windows-latest
  #           arch: x86
  #
  #   steps:
  #     - name: Clone Repository
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #
  #     - name: Install Compiler
  #       uses: dlang-community/setup-dlang@v1
  #       if: ${{ matrix.os != 'freebsd' }}
  #       with:
  #         compiler: ${{ env.DLP_COMPILER }}
  #
  #     - name: Build
  #       if: ${{ matrix.os != 'freebsd' }}
  #       run: ./tools/build_release.sh
  #
  #     - name: Build FreeBSD
  #       if: ${{ matrix.os == 'freebsd' }}
  #       uses: vmactions/freebsd-vm@v0.1.3
  #       with:
  #         usesh: true
  #         envs: 'DLP_COMPILER DLP_ARCH'
  #         run: |
  #           pkg update
  #           pkg install -y bash curl gnupg git llvm-90
  #           ./tools/build_release.sh
  #
  #     - name: Extract Version
  #       id: version
  #       run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
  #
  #     - name: Create Release
  #       id: create_release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         name: DLP ${{ steps.version.outputs.VERSION }}
  #         draft: true
  #         files: |
  #           dlp*.tar.xz
  #           dlp*.7z
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
